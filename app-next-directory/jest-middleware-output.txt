  console.error
    Middleware error: TypeError: Response.json is not a function
        at Function.json (D:\Eiat_Folder\MyProjects\MyOtherProjects\sustainable-eco-friendly-digital-nomads-directory\node_modules\.pnpm\next@15.3.4_@babel+core@7.2_febf676f31bec0f38f0beb51422fe613\node_modules\next\src\server\web\spec-extension\response.ts:113:41)
        at json (D:\Eiat_Folder\MyProjects\MyOtherProjects\sustainable-eco-friendly-digital-nomads-directory\app-next-directory\src\middleware.ts:90:31)
        at Object.<anonymous> (D:\Eiat_Folder\MyProjects\MyOtherProjects\sustainable-eco-friendly-digital-nomads-directory\app-next-directory\src\__tests__\middleware.test.ts:183:7)

    [0m [90m 111 |[39m       [90m// Graceful error handling[39m
     [90m 112 |[39m       [90m// eslint-disable-next-line no-console[39m
    [31m[1m>[22m[39m[90m 113 |[39m       console[33m.[39merror([32m'Middleware error:'[39m[33m,[39m error)[33m;[39m
     [90m     |[39m               [31m[1m^[22m[39m
     [90m 114 |[39m       [36mreturn[39m [33mNextResponse[39m[33m.[39mnext()[33m;[39m
     [90m 115 |[39m     }
     [90m 116 |[39m   }[33m;[39m[0m

      at error (src/middleware.ts:113:15)
      at Object.<anonymous> (src/__tests__/middleware.test.ts:183:7)

  console.error
    Middleware error: TypeError: Response.json is not a function
        at Function.json (D:\Eiat_Folder\MyProjects\MyOtherProjects\sustainable-eco-friendly-digital-nomads-directory\node_modules\.pnpm\next@15.3.4_@babel+core@7.2_febf676f31bec0f38f0beb51422fe613\node_modules\next\src\server\web\spec-extension\response.ts:113:41)
        at json (D:\Eiat_Folder\MyProjects\MyOtherProjects\sustainable-eco-friendly-digital-nomads-directory\app-next-directory\src\middleware.ts:90:31)
        at Object.<anonymous> (D:\Eiat_Folder\MyProjects\MyOtherProjects\sustainable-eco-friendly-digital-nomads-directory\app-next-directory\src\__tests__\middleware.test.ts:195:7)

    [0m [90m 111 |[39m       [90m// Graceful error handling[39m
     [90m 112 |[39m       [90m// eslint-disable-next-line no-console[39m
    [31m[1m>[22m[39m[90m 113 |[39m       console[33m.[39merror([32m'Middleware error:'[39m[33m,[39m error)[33m;[39m
     [90m     |[39m               [31m[1m^[22m[39m
     [90m 114 |[39m       [36mreturn[39m [33mNextResponse[39m[33m.[39mnext()[33m;[39m
     [90m 115 |[39m     }
     [90m 116 |[39m   }[33m;[39m[0m

      at error (src/middleware.ts:113:15)
      at Object.<anonymous> (src/__tests__/middleware.test.ts:195:7)

  console.error
    Middleware error: TypeError: Response.json is not a function
        at Function.json (D:\Eiat_Folder\MyProjects\MyOtherProjects\sustainable-eco-friendly-digital-nomads-directory\node_modules\.pnpm\next@15.3.4_@babel+core@7.2_febf676f31bec0f38f0beb51422fe613\node_modules\next\src\server\web\spec-extension\response.ts:113:41)
        at json (D:\Eiat_Folder\MyProjects\MyOtherProjects\sustainable-eco-friendly-digital-nomads-directory\app-next-directory\src\middleware.ts:97:31)
        at Object.<anonymous> (D:\Eiat_Folder\MyProjects\MyOtherProjects\sustainable-eco-friendly-digital-nomads-directory\app-next-directory\src\__tests__\middleware.test.ts:210:7)

    [0m [90m 111 |[39m       [90m// Graceful error handling[39m
     [90m 112 |[39m       [90m// eslint-disable-next-line no-console[39m
    [31m[1m>[22m[39m[90m 113 |[39m       console[33m.[39merror([32m'Middleware error:'[39m[33m,[39m error)[33m;[39m
     [90m     |[39m               [31m[1m^[22m[39m
     [90m 114 |[39m       [36mreturn[39m [33mNextResponse[39m[33m.[39mnext()[33m;[39m
     [90m 115 |[39m     }
     [90m 116 |[39m   }[33m;[39m[0m

      at error (src/middleware.ts:113:15)
      at Object.<anonymous> (src/__tests__/middleware.test.ts:210:7)

FAIL src/__tests__/middleware.test.ts
  Middleware
    static files and internal routes
      â”œÃ¹ should skip middleware for _next routes (27 ms)
      â”œÃ¹ should skip middleware for auth API routes (4 ms)
      â”œÃ¹ should skip middleware for files with extensions (8 ms)
    auth pages handling
      â”œÃ¹ should redirect authenticated users from signin page to dashboard (12 ms)
      â”œÃ¹ should redirect authenticated users from signup page to dashboard (7 ms)
      â”œÃ¹ should allow unauthenticated users to access auth pages (8 ms)
    protected routes
      â”œÃ¹ should redirect unauthenticated users from dashboard to signin (6 ms)
      â”œÃ¹ should redirect unauthenticated users from admin to signin (8 ms)
      â”œÃ¹ should redirect unauthenticated users from profile to signin (6 ms)
      â”œÃ¹ should allow authenticated users with proper role to access protected routes (18 ms)
    API routes protection
      â”œÃ¹ should return 401 for unauthenticated access to protected API (80 ms)
      â”œÃ¹ should return 401 for unauthenticated access to admin API (12 ms)
      â”œÃ¹ should allow authenticated access to user API (9 ms)
      â”œÃ¹ should allow unauthenticated access to public API routes (8 ms)
    security headers
      â”œÃ¹ should add security headers to response (3 ms)
    error handling
      â”œÃ¹ should handle errors gracefully and continue (10 ms)
      â”œÃ¹ should continue on getToken failure (5 ms)
    role-based access control
      â”œÃ¹ should deny access for users without proper role (8 ms)
      â”œÃ¹ should allow access for users with proper role (5 ms)
      â”œÃ¹ should return 403 for API routes with insufficient permissions (4 ms)
    edge cases
      â”œÃ¹ should handle missing token gracefully (4 ms)
      â”œÃ¹ should handle malformed token (4 ms)
      â”œÃ¹ should handle undefined role in token (12 ms)
    middleware (auth/profile)
      â”œÃ¹ redirects unauthenticated users to /auth/login with callbackUrl (6 ms)
      â”œÃ¹ allows authenticated users to proceed (4 ms)
      â”œÃ¹ sets callbackUrl to the original path (7 ms)
      â”œÃ¹ handles getToken errors gracefully (5 ms)
      â”œÃ¹ exports correct matcher config (15 ms)

  Î“Ã¹Ã… Middleware Î“Ã‡â•‘ static files and internal routes Î“Ã‡â•‘ should skip middleware for _next routes

    expect(jest.fn()).toHaveBeenCalled()

    Expected number of calls: >= 1
    Received number of calls:    0

      53 |       await middleware(request);
      54 |
    > 55 |       expect(mockNext).toHaveBeenCalled();
         |                        ^
      56 |       expect(mockRedirect).not.toHaveBeenCalled();
      57 |     });
      58 |

      at Object.toHaveBeenCalled (src/__tests__/middleware.test.ts:55:24)

  Î“Ã¹Ã… Middleware Î“Ã‡â•‘ static files and internal routes Î“Ã‡â•‘ should skip middleware for auth API routes

    expect(jest.fn()).toHaveBeenCalled()

    Expected number of calls: >= 1
    Received number of calls:    0

      63 |       await middleware(request);
      64 |
    > 65 |       expect(mockNext).toHaveBeenCalled();
         |                        ^
      66 |       expect(mockRedirect).not.toHaveBeenCalled();
      67 |     });
      68 |

      at Object.toHaveBeenCalled (src/__tests__/middleware.test.ts:65:24)

  Î“Ã¹Ã… Middleware Î“Ã‡â•‘ static files and internal routes Î“Ã‡â•‘ should skip middleware for files with extensions

    expect(jest.fn()).toHaveBeenCalled()

    Expected number of calls: >= 1
    Received number of calls:    0

      73 |       await middleware(request);
      74 |
    > 75 |       expect(mockNext).toHaveBeenCalled();
         |                        ^
      76 |       expect(mockRedirect).not.toHaveBeenCalled();
      77 |     });
      78 |   });

      at Object.toHaveBeenCalled (src/__tests__/middleware.test.ts:75:24)

  Î“Ã¹Ã… Middleware Î“Ã‡â•‘ auth pages handling Î“Ã‡â•‘ should redirect authenticated users from signin page to dashboard

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: ObjectContaining {"href": "https://example.com/dashboard"}

    Number of calls: 0

      88 |       await middleware(request);
      89 |
    > 90 |       expect(mockRedirect).toHaveBeenCalledWith(
         |                            ^
      91 |         expect.objectContaining({
      92 |           href: 'https://example.com/dashboard',
      93 |         })

      at Object.toHaveBeenCalledWith (src/__tests__/middleware.test.ts:90:28)

  Î“Ã¹Ã… Middleware Î“Ã‡â•‘ auth pages handling Î“Ã‡â•‘ should redirect authenticated users from signup page to dashboard

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: ObjectContaining {"href": "https://example.com/dashboard"}

    Number of calls: 0

      104 |       await middleware(request);
      105 |
    > 106 |       expect(mockRedirect).toHaveBeenCalledWith(
          |                            ^
      107 |         expect.objectContaining({
      108 |           href: 'https://example.com/dashboard',
      109 |         })

      at Object.toHaveBeenCalledWith (src/__tests__/middleware.test.ts:106:28)

  Î“Ã¹Ã… Middleware Î“Ã‡â•‘ auth pages handling Î“Ã‡â•‘ should allow unauthenticated users to access auth pages

    expect(jest.fn()).toHaveBeenCalled()

    Expected number of calls: >= 1
    Received number of calls:    0

      117 |       await middleware(request);
      118 |
    > 119 |       expect(mockNext).toHaveBeenCalled();
          |                        ^
      120 |       expect(mockRedirect).not.toHaveBeenCalled();
      121 |     });
      122 |   });

      at Object.toHaveBeenCalled (src/__tests__/middleware.test.ts:119:24)

  Î“Ã¹Ã… Middleware Î“Ã‡â•‘ protected routes Î“Ã‡â•‘ should redirect unauthenticated users from dashboard to signin

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: ObjectContaining {"href": "https://example.com/auth/signin?callbackUrl=%2Fdashboard"}

    Number of calls: 0

      129 |       await middleware(request);
      130 |
    > 131 |       expect(mockRedirect).toHaveBeenCalledWith(
          |                            ^
      132 |         expect.objectContaining({
      133 |           href: 'https://example.com/auth/signin?callbackUrl=%2Fdashboard',
      134 |         })

      at Object.toHaveBeenCalledWith (src/__tests__/middleware.test.ts:131:28)

  Î“Ã¹Ã… Middleware Î“Ã‡â•‘ protected routes Î“Ã‡â•‘ should redirect unauthenticated users from admin to signin

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: ObjectContaining {"href": "https://example.com/auth/signin?callbackUrl=%2Fadmin%2Fusers"}

    Number of calls: 0

      142 |       await middleware(request);
      143 |
    > 144 |       expect(mockRedirect).toHaveBeenCalledWith(
          |                            ^
      145 |         expect.objectContaining({
      146 |           href: 'https://example.com/auth/signin?callbackUrl=%2Fadmin%2Fusers',
      147 |         })

      at Object.toHaveBeenCalledWith (src/__tests__/middleware.test.ts:144:28)

  Î“Ã¹Ã… Middleware Î“Ã‡â•‘ protected routes Î“Ã‡â•‘ should redirect unauthenticated users from profile to signin

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: ObjectContaining {"href": "https://example.com/auth/signin?callbackUrl=%2Fprofile"}

    Number of calls: 0

      155 |       await middleware(request);
      156 |
    > 157 |       expect(mockRedirect).toHaveBeenCalledWith(
          |                            ^
      158 |         expect.objectContaining({
      159 |           href: 'https://example.com/auth/signin?callbackUrl=%2Fprofile',
      160 |         })

      at Object.toHaveBeenCalledWith (src/__tests__/middleware.test.ts:157:28)

  Î“Ã¹Ã… Middleware Î“Ã‡â•‘ protected routes Î“Ã‡â•‘ should allow authenticated users with proper role to access protected routes

    expect(jest.fn()).toHaveBeenCalled()

    Expected number of calls: >= 1
    Received number of calls:    0

      171 |       await middleware(request);
      172 |
    > 173 |       expect(mockNext).toHaveBeenCalled();
          |                        ^
      174 |       expect(mockRedirect).not.toHaveBeenCalled();
      175 |     });
      176 |   });

      at Object.toHaveBeenCalled (src/__tests__/middleware.test.ts:173:24)

  Î“Ã¹Ã… Middleware Î“Ã‡â•‘ API routes protection Î“Ã‡â•‘ should return 401 for unauthenticated access to protected API

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: {"error": "Authentication required"}, {"status": 401}

    Number of calls: 0

      183 |       await middleware(request);
      184 |
    > 185 |       expect(mockJson).toHaveBeenCalledWith(
          |                        ^
      186 |         { error: 'Authentication required' },
      187 |         { status: 401 }
      188 |       );

      at Object.toHaveBeenCalledWith (src/__tests__/middleware.test.ts:185:24)

  Î“Ã¹Ã… Middleware Î“Ã‡â•‘ API routes protection Î“Ã‡â•‘ should return 401 for unauthenticated access to admin API

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: {"error": "Authentication required"}, {"status": 401}

    Number of calls: 0

      195 |       await middleware(request);
      196 |
    > 197 |       expect(mockJson).toHaveBeenCalledWith(
          |                        ^
      198 |         { error: 'Authentication required' },
      199 |         { status: 401 }
      200 |       );

      at Object.toHaveBeenCalledWith (src/__tests__/middleware.test.ts:197:24)

  Î“Ã¹Ã… Middleware Î“Ã‡â•‘ API routes protection Î“Ã‡â•‘ should allow authenticated access to user API

    expect(jest.fn()).toHaveBeenCalled()

    Expected number of calls: >= 1
    Received number of calls:    0

      210 |       await middleware(request);
      211 |
    > 212 |       expect(mockNext).toHaveBeenCalled();
          |                        ^
      213 |       expect(mockJson).not.toHaveBeenCalled();
      214 |     });
      215 |

      at Object.toHaveBeenCalled (src/__tests__/middleware.test.ts:212:24)

  Î“Ã¹Ã… Middleware Î“Ã‡â•‘ API routes protection Î“Ã‡â•‘ should allow unauthenticated access to public API routes

    expect(jest.fn()).toHaveBeenCalled()

    Expected number of calls: >= 1
    Received number of calls:    0

      220 |       await middleware(request);
      221 |
    > 222 |       expect(mockNext).toHaveBeenCalled();
          |                        ^
      223 |       expect(mockJson).not.toHaveBeenCalled();
      224 |     });
      225 |   });

      at Object.toHaveBeenCalled (src/__tests__/middleware.test.ts:222:24)

  Î“Ã¹Ã… Middleware Î“Ã‡â•‘ security headers Î“Ã‡â•‘ should add security headers to response

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "X-Frame-Options", "DENY"

    Number of calls: 0

      239 |       await middleware(request);
      240 |
    > 241 |       expect(mockHeaderSet).toHaveBeenCalledWith('X-Frame-Options', 'DENY');
          |                             ^
      242 |       expect(mockHeaderSet).toHaveBeenCalledWith('X-Content-Type-Options', 'nosniff');
      243 |       expect(mockHeaderSet).toHaveBeenCalledWith('Referrer-Policy', 'strict-origin-when-cross-origin');
      244 |     });

      at Object.toHaveBeenCalledWith (src/__tests__/middleware.test.ts:241:29)

  Î“Ã¹Ã… Middleware Î“Ã‡â•‘ error handling Î“Ã‡â•‘ should handle errors gracefully and continue

    expect(jest.fn()).toHaveBeenCalled()

    Expected number of calls: >= 1
    Received number of calls:    0

      255 |
      256 |       expect(consoleSpy).toHaveBeenCalledWith('Middleware error:', expect.any(Error));
    > 257 |       expect(mockNext).toHaveBeenCalled();
          |                        ^
      258 |
      259 |       consoleSpy.mockRestore();
      260 |     });

      at Object.toHaveBeenCalled (src/__tests__/middleware.test.ts:257:24)

  Î“Ã¹Ã… Middleware Î“Ã‡â•‘ error handling Î“Ã‡â•‘ should continue on getToken failure

    expect(jest.fn()).toHaveBeenCalled()

    Expected number of calls: >= 1
    Received number of calls:    0

      268 |       await middleware(request);
      269 |
    > 270 |       expect(mockNext).toHaveBeenCalled();
          |                        ^
      271 |       consoleSpy.mockRestore();
      272 |     });
      273 |   });

      at Object.toHaveBeenCalled (src/__tests__/middleware.test.ts:270:24)

  Î“Ã¹Ã… Middleware Î“Ã‡â•‘ role-based access control Î“Ã‡â•‘ should deny access for users without proper role

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: ObjectContaining {"href": "https://example.com/?error=unauthorized_access"}

    Number of calls: 0

      283 |       await middleware(request);
      284 |
    > 285 |       expect(mockRedirect).toHaveBeenCalledWith(
          |                            ^
      286 |         expect.objectContaining({
      287 |           href: 'https://example.com/?error=unauthorized_access',
      288 |         })

      at Object.toHaveBeenCalledWith (src/__tests__/middleware.test.ts:285:28)

  Î“Ã¹Ã… Middleware Î“Ã‡â•‘ role-based access control Î“Ã‡â•‘ should allow access for users with proper role

    expect(jest.fn()).toHaveBeenCalled()

    Expected number of calls: >= 1
    Received number of calls:    0

      299 |       await middleware(request);
      300 |
    > 301 |       expect(mockNext).toHaveBeenCalled();
          |                        ^
      302 |       expect(mockRedirect).not.toHaveBeenCalled();
      303 |     });
      304 |

      at Object.toHaveBeenCalled (src/__tests__/middleware.test.ts:301:24)

  Î“Ã¹Ã… Middleware Î“Ã‡â•‘ role-based access control Î“Ã‡â•‘ should return 403 for API routes with insufficient permissions

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: {"error": "Access denied"}, {"status": 403}

    Number of calls: 0

      312 |       await middleware(request);
      313 |
    > 314 |       expect(mockJson).toHaveBeenCalledWith(
          |                        ^
      315 |         { error: 'Access denied' },
      316 |         { status: 403 }
      317 |       );

      at Object.toHaveBeenCalledWith (src/__tests__/middleware.test.ts:314:24)

  Î“Ã¹Ã… Middleware Î“Ã‡â•‘ edge cases Î“Ã‡â•‘ should handle missing token gracefully

    expect(jest.fn()).toHaveBeenCalled()

    Expected number of calls: >= 1
    Received number of calls:    0

      326 |       await middleware(request);
      327 |
    > 328 |       expect(mockNext).toHaveBeenCalled();
          |                        ^
      329 |     });
      330 |
      331 |     it('should handle malformed token', async () => {

      at Object.toHaveBeenCalled (src/__tests__/middleware.test.ts:328:24)

  Î“Ã¹Ã… Middleware Î“Ã‡â•‘ edge cases Î“Ã‡â•‘ should handle malformed token

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: ObjectContaining {"href": "https://example.com/auth/signin?callbackUrl=%2Fdashboard"}

    Number of calls: 0

      335 |       await middleware(request);
      336 |
    > 337 |       expect(mockRedirect).toHaveBeenCalledWith(
          |                            ^
      338 |         expect.objectContaining({
      339 |           href: 'https://example.com/auth/signin?callbackUrl=%2Fdashboard',
      340 |         })

      at Object.toHaveBeenCalledWith (src/__tests__/middleware.test.ts:337:28)

  Î“Ã¹Ã… Middleware Î“Ã‡â•‘ edge cases Î“Ã‡â•‘ should handle undefined role in token

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: ObjectContaining {"href": "https://example.com/auth/signin?callbackUrl=%2Fdashboard"}

    Number of calls: 0

      351 |       await middleware(request);
      352 |
    > 353 |       expect(mockRedirect).toHaveBeenCalledWith(
          |                            ^
      354 |         expect.objectContaining({
      355 |           href: 'https://example.com/auth/signin?callbackUrl=%2Fdashboard',
      356 |         })

      at Object.toHaveBeenCalledWith (src/__tests__/middleware.test.ts:353:28)

  Î“Ã¹Ã… Middleware Î“Ã‡â•‘ middleware (auth/profile) Î“Ã‡â•‘ redirects unauthenticated users to /auth/login with callbackUrl

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: ObjectContaining {"href": StringContaining "/auth/login?callbackUrl=%2Fauth%2Fprofile"}

    Number of calls: 0

      382 |     await middleware(request as any);
      383 |
    > 384 |     expect(mockRedirect).toHaveBeenCalledWith(
          |                          ^
      385 |       expect.objectContaining({
      386 |         href: expect.stringContaining('/auth/login?callbackUrl=%2Fauth%2Fprofile'),
      387 |       })

      at Object.toHaveBeenCalledWith (src/__tests__/middleware.test.ts:384:26)

  Î“Ã¹Ã… Middleware Î“Ã‡â•‘ middleware (auth/profile) Î“Ã‡â•‘ allows authenticated users to proceed

    expect(jest.fn()).toHaveBeenCalled()

    Expected number of calls: >= 1
    Received number of calls:    0

      395 |     await middleware(request as any);
      396 |
    > 397 |     expect(mockNext).toHaveBeenCalled();
          |                      ^
      398 |     expect(mockRedirect).not.toHaveBeenCalled();
      399 |   });
      400 |

      at Object.toHaveBeenCalled (src/__tests__/middleware.test.ts:397:22)

  Î“Ã¹Ã… Middleware Î“Ã‡â•‘ middleware (auth/profile) Î“Ã‡â•‘ sets callbackUrl to the original path

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: ObjectContaining {"href": StringContaining "/auth/login?callbackUrl=%2Fauth%2Fprofile%2Fsettings"}

    Number of calls: 0

      404 |     await middleware(request as any);
      405 |
    > 406 |     expect(mockRedirect).toHaveBeenCalledWith(
          |                          ^
      407 |       expect.objectContaining({
      408 |         href: expect.stringContaining('/auth/login?callbackUrl=%2Fauth%2Fprofile%2Fsettings'),
      409 |       })

      at Object.toHaveBeenCalledWith (src/__tests__/middleware.test.ts:406:26)

  Î“Ã¹Ã… Middleware Î“Ã‡â•‘ middleware (auth/profile) Î“Ã‡â•‘ handles getToken errors gracefully

    expect(jest.fn()).toHaveBeenCalled()

    Expected number of calls: >= 1
    Received number of calls:    0

      418 |
      419 |     // Should allow request to proceed even if getToken fails
    > 420 |     expect(mockNext).toHaveBeenCalled();
          |                      ^
      421 |     consoleSpy.mockRestore();
      422 |   });
      423 |

      at Object.toHaveBeenCalled (src/__tests__/middleware.test.ts:420:22)

  Î“Ã¹Ã… Middleware Î“Ã‡â•‘ middleware (auth/profile) Î“Ã‡â•‘ exports correct matcher config

    expect(received).toEqual(expected) // deep equality

    - Expected  -  1
    + Received  + 17

      Array [
    -   "/auth/profile",
    +   "/dashboard/:path*",
    +   "/admin/:path*",
    +   "/profile/:path*",
    +   "/settings/:path*",
    +   "/listings/manage/:path*",
    +   "/listings/create",
    +   "/listings/edit/:id*",
    +   "/analytics/:path*",
    +   "/login",
    +   "/register",
    +   "/api/user/:path*",
    +   "/api/editor/:path*",
    +   "/api/venue-owner/:path*",
    +   "/api/admin/:path*",
    +   "/api/superadmin/:path*",
    +   "/api/protected/:path*",
    +   "/api/session",
      ]

      424 |   it('exports correct matcher config', () => {
      425 |     expect(config).toBeDefined();
    > 426 |     expect(config.matcher).toEqual(['/auth/profile']);
          |                            ^
      427 |   });
      428 |
      429 |

      at Object.toEqual (src/__tests__/middleware.test.ts:426:28)

Test Suites: 1 failed, 1 total
Tests:       28 failed, 28 total
Snapshots:   0 total
Time:        6.32 s
Ran all test suites matching /src\\__tests__\\middleware.test.ts/i.
